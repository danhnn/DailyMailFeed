apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'jacoco'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        applicationId "com.hoasen.studio.dailymailfeed"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}


def coverageSourceDirs = [
        'src/main/java',
]

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."

    reports {
        xml.enabled = true
        html.enabled = true
    }

    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            includes: [
                    'com/hoasen/studio/dailymailfeed/**/*.class'
            ],
            excludes: [
                    '**/R*.class',
                    '**/BuildConfig.class',
                    '**/*$InjectAdapter.class',
                    '**/*$ModuleAdapter.class',
                    '**/*$ViewInjector*.class',
                    '**/*$ViewBinder*.class',
                    '**/*$Lambda*.class',
                    'com/hoasen/studio/dailymailfeed/MainNewsActivity.class',
                    'com/hoasen/studio/dailymailfeed/SplashActivity.class'
            ])
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("$buildDir/jacoco/testDebugUnitTest.exec")

    def renamedFilesMap = [:]

    // Hacky fix for issue: https://code.google.com/p/android/issues/detail?id=69174.
    // Rename files with '$$' before generating report, and then rename back after
    doFirst {
        new File('app/build/intermediates/classes/debug').eachFileRecurse { file ->
            if (file.name.contains('$$')) {
                def oldPath = file.path
                def newPath = oldPath.replace('$$', '$')
                file.renameTo(newPath)
                renamedFilesMap[newPath] = oldPath
            }
        }
    }

    doLast {
        renamedFilesMap.each() {
            newPath, oldPath ->
                new File(newPath).renameTo(oldPath)
        }
    }
}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // ANDROID SDK Libs:
    compile 'com.android.support:support-annotations:23.2.0'
    compile 'com.android.support:support-v4:23.2.0'
    compile 'com.android.support:appcompat-v7:23.2.0'
    compile 'com.android.support:recyclerview-v7:23.2.0'
    compile 'com.android.support:cardview-v7:23.2.0'
    //Google Material Icons
    compile 'com.mikepenz:google-material-typeface:2.2.0.1.original@aar'
    //FontAwesome
    compile 'com.mikepenz:iconics-core:2.5.8@aar'
    compile 'com.mikepenz:fontawesome-typeface:4.5.0.1@aar'
    // RX ANDROID
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.0'
    // RETROFIT:
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    // RX ADAPTER FOR RETROFIT:
    compile('com.squareup.retrofit2:converter-simplexml:2.0.0-beta4') {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }
    // DAGGER2
    apt 'com.google.dagger:dagger-compiler:2.0'
    compile 'com.google.dagger:dagger:2.0'
    provided 'javax.annotation:jsr250-api:1.0'
    //PICASSO:
    compile 'com.squareup.picasso:picasso:2.5.2'
    //BUTTER KNIFE:
    compile 'com.jakewharton:butterknife:7.0.1'
    // Other Third party components:
    compile 'com.github.paolorotolo:appintro:3.4.0'
    compile('com.mikepenz:materialdrawer:5.0.9@aar') {
        transitive = true
    }
    //UNIT TEST:
    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.1-SNAPSHOT'
    testCompile 'org.mockito:mockito-core:2.0.31-beta'
    testCompile 'org.hamcrest:hamcrest-core:1.2.1'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.2.0'
    // UI TEST:
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.0') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.1') {
        // Necessary if your app targets Marshmallow (since Espresso
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:runner:0.4.1') {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
}
